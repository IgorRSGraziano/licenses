<div style="display: none" class="fixed top-0 left-0 z-[9999] bg-gray-900/[.4]  h-full w-full overflow-y-auto overflow-x-hidden outline-none" data-modal>
  <div data-modal-content class="relative w-auto translate-y-[-50%] p-10 top-[50%] transition-all duration-300 ease-in-out md:mx-auto md:mt-7 md:max-w-[500px] shadow-lg bg-white rounded">
    <p class="block leading-6 font-bold text-2xl py-2 text-gray-900">Selecione o whitelabel</p>
    <%#= form.select :client_id, @clients_options, { include_blank: 'Selecione whitelabel' }, class: "mb-7", data: { 'tom-select' => true } %>
    <select class="mb-7" data-tom-select="true" data-select-whitelabel>
      <% @clients_options.each do |c| %>
        <option value="<%= c[1] %>"> <%= c[0] %></option>
      <% end %>
    </select>
    <button class="button block ml-auto" onclick="generateLicense()">Gerar</button>
  </div>
</div>
<div class="w-fit max-w-full m-auto">

  <div class="flex justify-between items-center">
    <h1><%= License.pl %></h1>
    <div class="flex">
      <% if current_user.admin %>
        <%= link_to "Importar", licenses_import_path, class: "button" %>
        <div class="button" onclick="showModal()">Gerar</div>
      <% end %>
    </div>
  </div>

  <div id="licenses" class="overflow-auto w-full">
    <table class="border-collapse table-fixed text-sm max-w-full">
      <thead class="bg-slate-100 shadow-md">
      <tr>

        <% { License.h(:id) => { search: 'licenses.id', input_css: 'width: 50px' },
             License.h(:key) => { search: 'licenses.`key`', input_css: 'width: 270px' },
             Client.h => { search: ' clients.brand ', input_css: 'width: 90px' },
             "Integração" => { search: ' payment_integrations.name ', input_css: 'width: 70px' },
             License.h(:created_at) => { search: ' licenses.created_at ', input_css: 'width: 125px' },
             License.h(:updated_at) => { search: ' licenses.updated_at ', input_css: 'width: 125px' },
             Customer.h => { search: 'customers.email', input_css: 'width: 190px' },
             License.h(:status) => { search: ' licenses.status ', input_css: 'width: 90px' } }.each do |text, opts| %>
          <th class="border-b break-words font-medium text-center p-1 pt-6 py-3 text-left w-[50px]">
            <a href="<%= sort_url request.original_url, opts[:search] %>" class="text-slate-400">
              <%= fa_icon(sort_arrow(request.original_url, opts[:search])) %>
              <%= text %>
            </a>
            <label class="flex items-center px-2 bg-white mt-3 m-auto" style="<%= opts[:input_css] %>">
              <%= fa_icon 'search', class: "text-slate-400" %>
              <input type="text" class="m-auto border-t-0 border-x-0 w-full" data-search="<%= opts[:search] %>"/>
            </label>
          </th>
        <% end %>
        <th class="border-b break-words font-medium text-center p-1 pt-6 py-3 text-slate-400 text-left">
          <%= t 'actions.actions' %>
        </th>
      </tr>
      </thead>
      <tbody class="bg-white" data-license-list>
      <%= render 'list', licenses: @licenses %>
    </table>
  </div>

  <div class="flex justify-between p-5">
    <%= paginate @licenses %>
    <span class="mr-5"><%= @licenses.count %> resultados</span>
  </div>
</div>

<script>
    async function updateStatus(id) {
        const data = new FormData()
        data.append("id", id)
        await fetch("/licenses/change_status", {
            method: "PUT",
            headers: {
                "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content,
            },
            body: data
        })
        window.location.reload() //FIXME
    }

    const modal = document.querySelector("[data-modal]");

    const closeModal = () => {
        modal.style.display = "none"
    }

    const showModal = () => {
        modal.style.display = ""
    }

    const verifyClick = (ev) => {
        !ev.target.closest("[data-modal-content]") && closeModal()
    }

    const generateLicense = async () => {
        const url = "<%= licenses_path %>"
        const whitelabel = document.querySelector("[data-select-whitelabel]").value
        await fetch(url, {
            method: "POST", redirect: "manual", headers: {
                'Content-Type': 'application/json'
            }, body: JSON.stringify({whitelabel: +whitelabel})
        })
        window.location.reload()
    }

    document.querySelector("[data-modal]")?.addEventListener("click", verifyClick)

    window.showModal = showModal;
    window.generateLicense = generateLicense;

    const searchElements = document.querySelectorAll('[data-search]');
    const handleSearch = async () => {
        const searchStr = [...searchElements].filter(el => el.value?.trim()).map(el => `${el.dataset.search}~${el.value}`).join('~~')
        const req = await fetch(`?q=${searchStr}&partial=1`)
        const res = await req.text()
        document.querySelector('[data-license-list]').innerHTML = res
    }
    searchElements.forEach(el => {
        el.addEventListener('input', handleSearch)
    })
</script>
