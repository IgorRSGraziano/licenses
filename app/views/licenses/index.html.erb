<div style="display: none" class="fixed top-0 left-0 z-[9999] bg-gray-900/[.4]  h-full w-full overflow-y-auto overflow-x-hidden outline-none" data-modal>
  <div data-modal-content class="relative w-auto translate-y-[-50%] p-10 top-[50%] transition-all duration-300 ease-in-out md:mx-auto md:mt-7 md:max-w-[500px] shadow-lg bg-white rounded">
    <p class="block leading-6 font-bold text-2xl py-2 text-gray-900">Selecione o whitelabel</p>
    <%#= form.select :client_id, @clients_options, { include_blank: 'Selecione whitelabel' }, class: "mb-7", data: { 'tom-select' => true } %>
    <select class="mb-7" data-tom-select="true" data-select-whitelabel>
      <% @clients_options.each do |c| %>
        <option value="<%= c[1] %>"> <%= c[0] %></option>
      <% end %>
    </select>
    <button class="button block ml-auto" onclick="generateLicense()">Gerar</button>
  </div>
</div>
<div class="w-fit max-w-full m-auto">

  <div class="flex justify-between items-center">
    <h1><%= License.pl %></h1>
    <div class="flex">
      <% if current_user.admin %>
        <%= link_to "Importar", licenses_import_path, class: "button" %>
        <div class="button" onclick="showModal()">Gerar</div>
      <% end %>
    </div>
  </div>

  <%= render 'layouts/search' %>

  <div id="licenses" class="overflow-auto w-full">
    <table class="border-collapse table-fixed text-sm max-w-full">
      <thead class="bg-slate-100 shadow-md">
      <tr>
        <% { License.h(:id) => 'licenses.id', License.h(:key) => 'licenses.`key`', Client.h => 'licenses.client_id', "Integração" => 'payments.payment_integration_id', License.h(:created_at) => 'licenses.created_at', License.h(:updated_at) => 'licenses.updated_at', Customer.h => 'licenses.customer_id', License.h(:status) => 'licenses.status' }.each do |text, search_text| %>
          <th class="border-b break-words font-medium text-center p-1 pt-6 py-3 text-left">
            <a href="<%= sort_url request.original_url, search_text %>" class="text-slate-400">
              <%= fa_icon(sort_arrow(request.original_url, search_text)) %>
              <%= text %>
            </a>
          </th>
        <% end %>
        <th class="border-b break-words font-medium text-center p-1 pt-6 py-3 text-slate-400 text-left">
          <%= t 'actions.actions' %>
        </th>
      </tr>
      </thead>
      <tbody class="bg-white">
      <% @licenses.each do |license| %>
        <tr>
          <% [license.id, license.key, license.client.brand, license.payment&.payment_integration&.name, license.created_at, license.updated_at, license.customer&.email].each do |data| %>
            <td class="border-b border-slate-100 break-words p-4 px-4 m-auto text-center text-slate-500"><%= data %></td>
          <% end %>
          <% #TODO colocar input select nas opções
             if license.status == "active"
               bg = "bg-green-200"
             elsif license.status == "inactive"
               bg = "bg-red-200"
             else
               bg = "bg-blue-200"
             end
          %>
          <td class="border-b border-slate-100 break-words p-4 px-1 m-auto text-center text-slate-500">
          <span class="<%= bg %> block w-24 py-1 px-2 m-auto rounded hover:cursor-pointer" onclick="updateStatus(<%= license.id %>)">
          <%= license.status %>
          </span>
          </td>
          <td class="border-b border-slate-100 break-words p-4 px-1 m-auto text-center text-slate-500 w-0.5">
            <%= link_to t('actions.view'), license_path(license), class: "button" %>
          </td>
        </tr>
      <% end %>
      </table>
  </div>

  <div class="flex justify-between p-5">
    <%= paginate @licenses %>
    <span class="mr-5"><%= @licenses.count %> resultados</span>
  </div>
</div>

<script>
    async function updateStatus(id) {
        const data = new FormData()
        data.append("id", id)
        await fetch("/licenses/change_status", {
            method: "PUT",
            headers: {
                "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content,
            },
            body: data
        })
        window.location.reload() //FIXME
    }

    const modal = document.querySelector("[data-modal]");

    const closeModal = () => {
        modal.style.display = "none"
    }

    const showModal = () => {
        modal.style.display = ""
    }

    const verifyClick = (ev) => {
        !ev.target.closest("[data-modal-content]") && closeModal()
    }

    const generateLicense = async () => {
        const url = "<%= licenses_path %>"
        const whitelabel = document.querySelector("[data-select-whitelabel]").value
        await fetch(url, {
            method: "POST", redirect: "manual", headers: {
                'Content-Type': 'application/json'
            }, body: JSON.stringify({whitelabel: +whitelabel})
        })
        window.location.reload()
    }

    document.querySelector("[data-modal]")?.addEventListener("click", verifyClick)

    window.showModal = showModal;
    window.generateLicense = generateLicense;
</script>
